buildscript {
    ext.kotlin_version = '1.9.24'
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.2.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

group = project.findProperty('GROUP') ?: System.getenv('GROUP') ?: 'com.github.Webnexs'
version = project.findProperty('VERSION') ?: System.getenv('VERSION') ?: '1.0.0'

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'maven-publish'

android {
    compileSdk 34
    
    defaultConfig {
        minSdk 21
        targetSdk 34
        versionCode 1
        versionName "1.0.0"
        
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }
    
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    
    kotlinOptions {
        jvmTarget = '1.8'
    }
    
    buildFeatures {
        viewBinding true
    }
    
    namespace 'com.unifiedvideo.player'
}

repositories {
    google()
    mavenCentral()
}

dependencies {
    // ExoPlayer
    implementation 'com.google.android.exoplayer:exoplayer:2.19.1'
    implementation 'com.google.android.exoplayer:exoplayer-hls:2.19.1'
    implementation 'com.google.android.exoplayer:exoplayer-dash:2.19.1'
    implementation 'com.google.android.exoplayer:exoplayer-smoothstreaming:2.19.1'
    implementation 'com.google.android.exoplayer:extension-okhttp:2.19.1'
    
    // UI Components
    implementation 'com.google.android.exoplayer:exoplayer-ui:2.19.1'
    
    // DRM Support
    implementation 'com.google.android.exoplayer:extension-drm:2.19.1'

    // Google Cast (sender)
    implementation 'com.google.android.gms:play-services-cast-framework:21.4.0'
    
    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    
    // AndroidX
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.11.0'
    implementation 'androidx.mediarouter:mediarouter:1.6.0'
    implementation 'androidx.media:media:1.6.0'
    
    // Testing
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}

// Maven Publishing
afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release

                groupId = project.group
                artifactId = 'unifiedvideo-player'
                version = project.version

                pom {
                    name = 'Unified Video Player'
                    description = 'Unified video player SDK for Android'
                    url = 'https://github.com/Webnexs/unified-video-framework'
                    licenses {
                        license {
                            name = 'MIT License'
                            url = 'https://opensource.org/licenses/MIT'
                        }
                    }
                }
            }
        }
        // Optional: Only publish to GitHub Packages if credentials are provided (prevents JitPack failures)
        if (project.hasProperty('github.user') && project.hasProperty('github.token')) {
            repositories {
                maven {
                    name = "GitHubPackages"
                    url = uri("https://maven.pkg.github.com/yourcompany/unified-video-android")
                    credentials {
                        username = project.findProperty("github.user")
                        password = project.findProperty("github.token")
                    }
                }
            }
        }
    }
}

tasks.register('install') { dependsOn('publishToMavenLocal') }
