name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  release:
    types: [created]

jobs:
  # Code quality checks
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run ESLint
        run: npm run lint
      
      - name: Check TypeScript
        run: npm run type-check

  # Unit tests
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16, 18, 20]
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests with coverage
        run: npm run test:coverage
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/coverage-final.json
          flags: unittests
          name: codecov-${{ matrix.node-version }}

  # Build packages
  build:
    name: Build Packages
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: |
          npm ci
          npm run bootstrap
      
      - name: Build all packages
        run: npm run build
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-packages
          path: |
            packages/*/dist
            !packages/*/node_modules

  # Platform-specific builds
  build-platforms:
    name: Build Platform - ${{ matrix.platform }}
    runs-on: ${{ matrix.os }}
    needs: build
    strategy:
      matrix:
        include:
          - platform: web
            os: ubuntu-latest
          - platform: ios
            os: macos-latest
          - platform: android
            os: ubuntu-latest
          - platform: roku
            os: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Setup platform-specific tools
        run: |
          if [ "${{ matrix.platform }}" = "ios" ]; then
            echo "Setting up iOS tools..."
            # brew install cocoapods
          elif [ "${{ matrix.platform }}" = "android" ]; then
            echo "Setting up Android tools..."
            # Setup Android SDK
          elif [ "${{ matrix.platform }}" = "roku" ]; then
            echo "Setting up Roku tools..."
            # npm install -g @rokucommunity/bslint brighterscript
          fi
      
      - name: Install dependencies
        run: |
          npm ci
          npm run bootstrap
      
      - name: Build ${{ matrix.platform }}
        run: npm run build:${{ matrix.platform }}
        continue-on-error: true # Allow failures for now since packages are incomplete

  # Integration tests
  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: build
    services:
      nginx:
        image: nginx:alpine
        ports:
          - 8080:80
        options: --health-cmd="wget -O /dev/null http://localhost || exit 1"
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: |
          npm ci
          npm run bootstrap
      
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-packages
          path: packages
      
      - name: Run integration tests
        run: npm run test:integration
        env:
          TEST_SERVER_URL: http://localhost:8080

  # Deploy documentation
  docs:
    name: Deploy Documentation
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build documentation
        run: npm run docs
      
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs

  # Publish to NPM
  publish:
    name: Publish to NPM
    runs-on: ubuntu-latest
    needs: [build, integration]
    if: github.event_name == 'release'
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Install dependencies
        run: |
          npm ci
          npm run bootstrap
      
      - name: Build packages
        run: npm run build
      
      - name: Publish packages
        run: npm run publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  # Security audit
  security:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Run npm audit
        run: npm audit --audit-level=moderate
        continue-on-error: true
      
      - name: Run Snyk security scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        continue-on-error: true
